{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllUsers() {\n    return this.http.get(\"http://localhost:8080/users\");\n  }\n  login(u, p) {\n    const data = {\n      username: u,\n      password: p\n    };\n    return this.http.post(\"http://localhost:8080/users/login\", data);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["UserService","constructor","http","getAllUsers","get","login","u","p","data","username","password","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Gile\\Desktop\\PIA vezbe\\Za vezbanje\\frontend\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from './user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllUsers(){\n    return this.http.get<User[]>(\"http://localhost:8080/users\");\n  }\n\n  login(u: string, p: string){\n    const data = {\n      username: u,\n      password: p\n    }\n    return this.http.post<User>(\"http://localhost:8080/users/login\", data);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAS,6BAA6B,CAAC;EAC7D;EAEAC,KAAKA,CAACC,CAAS,EAAEC,CAAS;IACxB,MAAMC,IAAI,GAAG;MACXC,QAAQ,EAAEH,CAAC;MACXI,QAAQ,EAAEH;KACX;IACD,OAAO,IAAI,CAACL,IAAI,CAACS,IAAI,CAAO,mCAAmC,EAAEH,IAAI,CAAC;EACxE;EAAC,QAAAI,CAAA,G;qBAdUZ,WAAW,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXjB,WAAW;IAAAkB,OAAA,EAAXlB,WAAW,CAAAmB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}